// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/cluster/service.go

// Package cluster is a generated GoMock package.
package cluster

import (
	context "context"
	client "github.com/fabric8-services/fabric8-jenkins-idler/internal/auth/client"
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetClusterView mocks base method
func (m *MockService) GetClusterView(arg0 context.Context) (View, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterView", arg0)
	ret0, _ := ret[0].(View)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterView indicates an expected call of GetClusterView
func (mr *MockServiceMockRecorder) GetClusterView(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterView", reflect.TypeOf((*MockService)(nil).GetClusterView), arg0)
}

// MockauthService is a mock of authService interface
type MockauthService struct {
	ctrl     *gomock.Controller
	recorder *MockauthServiceMockRecorder
}

// MockauthServiceMockRecorder is the mock recorder for MockauthService
type MockauthServiceMockRecorder struct {
	mock *MockauthService
}

// NewMockauthService creates a new mock instance
func NewMockauthService(ctrl *gomock.Controller) *MockauthService {
	mock := &MockauthService{ctrl: ctrl}
	mock.recorder = &MockauthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockauthService) EXPECT() *MockauthServiceMockRecorder {
	return m.recorder
}

// DecodeJSONAPIErrors mocks base method
func (m *MockauthService) DecodeJSONAPIErrors(resp *http.Response) (*client.JSONAPIErrors, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecodeJSONAPIErrors", resp)
	ret0, _ := ret[0].(*client.JSONAPIErrors)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DecodeJSONAPIErrors indicates an expected call of DecodeJSONAPIErrors
func (mr *MockauthServiceMockRecorder) DecodeJSONAPIErrors(resp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecodeJSONAPIErrors", reflect.TypeOf((*MockauthService)(nil).DecodeJSONAPIErrors), resp)
}

// ShowClusters mocks base method
func (m *MockauthService) ShowClusters(ctx context.Context, path string) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShowClusters", ctx, path)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShowClusters indicates an expected call of ShowClusters
func (mr *MockauthServiceMockRecorder) ShowClusters(ctx, path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowClusters", reflect.TypeOf((*MockauthService)(nil).ShowClusters), ctx, path)
}

// DecodeClusterList mocks base method
func (m *MockauthService) DecodeClusterList(resp *http.Response) (*client.ClusterList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecodeClusterList", resp)
	ret0, _ := ret[0].(*client.ClusterList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DecodeClusterList indicates an expected call of DecodeClusterList
func (mr *MockauthServiceMockRecorder) DecodeClusterList(resp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecodeClusterList", reflect.TypeOf((*MockauthService)(nil).DecodeClusterList), resp)
}
