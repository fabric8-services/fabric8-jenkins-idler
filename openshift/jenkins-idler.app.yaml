kind: Template
apiVersion: v1
metadata:
  name: jenkins-idler
labels:
  template: jenkins-idler
objects:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: jenkins-idler
  spec:
    replicas: 1
    selector:
      service: jenkins-idler
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: jenkins-idler
      spec:
        containers:
        - env:
          - name: JC_OPENSHIFT_API_URL
            valueFrom:
              configMapKeyRef:
                name: f8tenant
                key: openshift.tenant.masterurl
          - name: JC_OPENSHIFT_API_TOKEN
            valueFrom:
              secretKeyRef:
                name: openshift-online-tokens
                key: dsaas-service-token
          - name: JC_IDLE_AFTER
            valueFrom:
              configMapKeyRef:
                name: jenkins-idler
                key: idle.after
          - name: JC_JENKINS_PROXY_API_URL
            valueFrom:
              configMapKeyRef:
                name: jenkins-idler
                key: jenkins.proxy.url
          - name: JC_F8TENANT_API_URL
            valueFrom:
              configMapKeyRef:
                name: jenkins-proxy
                key: f8tenant.api.url
          - name: JC_TOGGLE_API_URL
            valueFrom:
              configMapKeyRef:
                name: jenkins-idler
                key: toggles.api.url
          - name: JC_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: jenkins-proxy
                key: proxy.auth.token
          - name: GODEBUG
            value: gctrace=0
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: jenkins-idler
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            httpGet:
              path: /iapi/idler/builds/none
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /iapi/idler/builds/none
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 10
          resources:
            requests:
              memory: "50Mi"
              cpu: "30m"
            limits:
              memory: "128Mi"
              cpu: "500m"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      service: jenkins-idler
    name: jenkins-idler
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      service: jenkins-idler
    sessionAffinity: None
    type: ClusterIP
- kind: Route
  apiVersion: v1
  metadata:
    name: jenkins-idler
  spec:
    host: ''
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: jenkins-idler
      weight: 100
    wildcardPolicy: None
parameters:
- name: IMAGE
  value: registry.devshift.net/fabric8-services/fabric8-jenkins-idler
  required: true
- name: IMAGE_TAG
  value: latest
  required: true